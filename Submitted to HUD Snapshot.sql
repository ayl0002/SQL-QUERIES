SET NOCOUNT ON
SET ANSI_WARNINGS OFF

DECLARE @EOM AS DATE = EOMONTH(DATEADD(MONTH,-1,GETDATE())) 
DECLARE @DT_INT AS INT = REPLACE(@EOM,'-','')

IF OBJECT_ID ('tempdb..#BASE0') IS NOT NULL
	BEGIN
	DROP TABLE #BASE0
	END

SELECT PROCESS_DATE,	LOAN_NBR,	INVESTOR,	COUNTERPARTY,	POOL_NAME,		
CASE WHEN MCA_PERCENT > 105 THEN '11. 105+'
	WHEN MCA_PERCENT >= 104 THEN '10. 104-105'
	WHEN MCA_PERCENT >= 103 THEN '9. 103-104'
	WHEN MCA_PERCENT >= 102 THEN '8. 102-103'
	WHEN MCA_PERCENT >= 101 THEN '7. 101-102'
	WHEN MCA_PERCENT >= 100 THEN '6. 100-101'
END AS 'MCA_PERCENT_BUCKET'

,MCA_PERCENT,	MAX_CLAIM_AMOUNT,	CURRENT_TOTAL_UPB,	CURRENT_INTEREST_RATE,	MIP_RATE,	MONTHLY_PAYMENTS,CURRENT_TOTAL_UPB - MAX_CLAIM_AMOUNT AS 'CROSS OVER'

INTO #BASE0
 
FROM Reverse_dw.[dbo].[RM_CHAMPION_MASTER_TBL_VW] (@EOM,@DT_INT)

WHERE MCA_PERCENT >= 100 AND LOAN_STATUS = 'Active' AND [FHA_CASE_NBR] <> '0000000000000'


IF OBJECT_ID ('tempdb..#BASE') IS NOT NULL
	BEGIN
	DROP TABLE #BASE
	END

--HUD_ASGN_LOANS
SELECT A.*,B.[STG_VAL],B.[FINAL_RVW_STS_DESC],B.[INITL_RVW_STS_DESC]
INTO #BASE
FROM #BASE0 A
LEFT JOIN (SELECT LOAN_NBR,[STG_VAL],[FINAL_RVW_STS_DESC],[INITL_RVW_STS_DESC],[TAG_2_VAL],[INCRBL_FLG_DESC],GRP_DESC FROM REVERSE_DW.[dbo].[HUD_ASGN_LOANS] WHERE CURR_IND = 'Y') B
	ON A.LOAN_NBR = B.LOAN_NBR
WHERE B.TAG_2_VAL IS NULL AND INCRBL_FLG_DESC = '0' AND ISNULL(GRP_DESC,'No Group') <> 'Grp 5 BofA GNMAs'


IF OBJECT_ID ('tempdb..#EXCP0') IS NOT NULL
	BEGIN
	DROP TABLE #EXCP0
	END

--EXCP SCRUB--
SELECT B.*
INTO #EXCP0
FROM #BASE A
LEFT JOIN REVERSE_DW.[dbo].[HUD_ASGN_EXCP_EDW] B
	ON A. LOAN_NBR = B.LOAN_NBR

IF OBJECT_ID ('tempdb..#EXCP') IS NOT NULL
	BEGIN
	DROP TABLE #EXCP
	END

--EXCP SCRUB 2--
SELECT B.*--,FIRST_REOPEN,SECOND_CLOSE,FIRST_CLOSE,SECOND_REOPEN
,CASE WHEN SECOND_REOPEN IS NOT NULL THEN SECOND_REOPEN 
	  WHEN FIRST_REOPEN IS NOT NULL THEN FIRST_REOPEN 
	  ELSE B.EXCP_RQST_DTTM
END AS 'TRUE_OPEN'
INTO #EXCP
FROM (SELECT * FROM #EXCP0 WHERE CURR_IND = 'Y' AND EXCP_STS_DESC NOT IN ('RESOLVED','CLOSED','NOT VALID','CLOSED WITH VENDOR','Resolved by ML','Canceled')) B
LEFT JOIN (SELECT EXCP4.EXCP_ID,MIN(EFF_DTTM) AS 'FIRST_REOPEN' FROM #EXCP0 EXCP4
			LEFT JOIN (SELECT EXCP_ID,MIN(EFF_DTTM) AS 'FIRST_CLOSE' FROM #EXCP0 WHERE EXCP_STS_DESC IN ('RESOLVED','CLOSED','NOT VALID','CLOSED WITH VENDOR','Resolved by ML','Canceled') GROUP BY EXCP_ID) EXCP3
				ON EXCP3.EXCP_ID = EXCP4.EXCP_ID WHERE EXCP4.EXCP_STS_DESC NOT IN ('RESOLVED','CLOSED','NOT VALID','CLOSED WITH VENDOR','Resolved by ML','Canceled') AND EXCP4.EFF_DTTM > FIRST_CLOSE GROUP BY EXCP4.EXCP_ID) E
	ON B.EXCP_ID = E.EXCP_ID
LEFT JOIN (SELECT EXCP5.EXCP_ID,MIN(EFF_DTTM) AS 'SECOND_CLOSE'	FROM #EXCP0 EXCP5
					LEFT JOIN (SELECT EXCP4.EXCP_ID,MIN(EFF_DTTM) AS 'OPEN1' FROM #EXCP0 EXCP4
								LEFT JOIN (SELECT EXCP_ID,MIN(EFF_DTTM) AS 'FIRST_CLOSE' FROM #EXCP0 WHERE EXCP_STS_DESC IN ('RESOLVED','CLOSED','NOT VALID','CLOSED WITH VENDOR','Resolved by ML','Canceled') GROUP BY EXCP_ID) EXCP3
								ON EXCP3.EXCP_ID = EXCP4.EXCP_ID WHERE EXCP4.EXCP_STS_DESC NOT IN ('RESOLVED','CLOSED','NOT VALID','CLOSED WITH VENDOR','Resolved by ML','Canceled') AND EXCP4.EFF_DTTM > FIRST_CLOSE GROUP BY EXCP4.EXCP_ID) E
					ON E.EXCP_ID = EXCP5.EXCP_ID WHERE EXCP5.EXCP_STS_DESC IN ('RESOLVED','CLOSED','NOT VALID','CLOSED WITH VENDOR','Resolved by ML','Canceled') AND EXCP5.EFF_DTTM > OPEN1 GROUP BY EXCP5.EXCP_ID) F
	ON B.EXCP_ID = F.EXCP_ID
LEFT JOIN (SELECT EXCP_ID,MIN(EFF_DTTM) AS 'FIRST_CLOSE' FROM #EXCP0 WHERE EXCP_STS_DESC IN ('RESOLVED','CLOSED','NOT VALID','CLOSED WITH VENDOR','Resolved by ML','Canceled') GROUP BY EXCP_ID) G
	ON B.EXCP_ID = G.EXCP_ID
LEFT JOIN (SELECT EXCP6.EXCP_ID,MIN(EFF_DTTM) AS 'SECOND_REOPEN'FROM #EXCP0 EXCP6
				LEFT JOIN (SELECT EXCP5.EXCP_ID,MIN(EFF_DTTM) AS 'SECOND_CLOSE'	FROM #EXCP0 EXCP5
							LEFT JOIN (SELECT EXCP4.EXCP_ID,MIN(EFF_DTTM) AS 'OPEN1' FROM #EXCP0 EXCP4
									LEFT JOIN (SELECT EXCP_ID,MIN(EFF_DTTM) AS 'FIRST_CLOSE' FROM #EXCP0 WHERE EXCP_STS_DESC IN ('RESOLVED','CLOSED','NOT VALID','CLOSED WITH VENDOR','Resolved by ML','Canceled') GROUP BY EXCP_ID) EXCP3
									ON EXCP3.EXCP_ID = EXCP4.EXCP_ID WHERE EXCP4.EXCP_STS_DESC NOT IN ('RESOLVED','CLOSED','NOT VALID','CLOSED WITH VENDOR','Resolved by ML','Canceled') AND EXCP4.EFF_DTTM > FIRST_CLOSE GROUP BY EXCP4.EXCP_ID) E
								ON E.EXCP_ID = EXCP5.EXCP_ID WHERE EXCP5.EXCP_STS_DESC IN ('RESOLVED','CLOSED','NOT VALID','CLOSED WITH VENDOR','Resolved by ML','Canceled') AND EXCP5.EFF_DTTM > OPEN1 GROUP BY EXCP5.EXCP_ID) F
					ON EXCP6.EXCP_ID = F.EXCP_ID WHERE EXCP6.EFF_DTTM > SECOND_CLOSE AND EXCP6.EXCP_STS_DESC NOT IN ('RESOLVED','CLOSED','NOT VALID','CLOSED WITH VENDOR','Resolved by ML','Canceled') GROUP BY EXCP6.EXCP_ID) H
	ON B.EXCP_ID = H.EXCP_ID

IF OBJECT_ID ('tempdb..#BASE1') IS NOT NULL
	BEGIN
	DROP TABLE #BASE1
	END

--HUD Assign Loans--
SELECT C.LOAN_NBR,A.EXCP_ID,A.[WRK_GRP_DESC],A.[DOC_DESC],A.[ISSU_DESC],A.[EXCP_STS_DESC]
,CASE WHEN T_OPEN_2 IS NOT NULL THEN T_OPEN_2
	   WHEN T_OPEN_1 IS NOT NULL THEN T_OPEN_1
	   ELSE TRUE_OPEN
END AS 'TRUE_OPEN'
INTO #BASE1
FROM #BASE C
LEFT JOIN #EXCP A
ON C.LOAN_NBR = A.LOAN_NBR
LEFT JOIN (SELECT EXCP1.EXCP_ID,MIN(EXCP1.EFF_DTTM) AS 'T_OPEN_1'FROM #EXCP0 EXCP1
			LEFT JOIN (SELECT EXCP1.EXCP_ID,MIN(EXCP1.EFF_DTTM) AS 'T_CLOSE_1'FROM #EXCP0 EXCP1
					LEFT JOIN #EXCP EXCP2
					ON EXCP1.EXCP_ID = EXCP2.EXCP_ID WHERE EXCP1.EFF_DTTM > TRUE_OPEN AND EXCP1.EXCP_STS_DESC NOT IN ('RESOLVED','CLOSED','NOT VALID','CLOSED WITH VENDOR','Resolved by ML','Canceled') GROUP BY EXCP1.EXCP_ID)  SUB1 
				ON EXCP1.EXCP_ID = SUB1.EXCP_ID GROUP BY EXCP1.EXCP_ID) D
	ON A.EXCP_ID = D.EXCP_ID
LEFT JOIN (SELECT  EXCP1.EXCP_ID,MIN(EFF_DTTM) AS 'T_OPEN_2' FROM #EXCP0 EXCP1
		LEFT JOIN (SELECT EXCP1.EXCP_ID,MIN(EFF_DTTM) AS 'T_CLOSE_2' FROM #EXCP0 EXCP1
				LEFT JOIN (SELECT EXCP1.EXCP_ID,MIN(EXCP1.EFF_DTTM) AS 'T_OPEN_1'FROM #EXCP0 EXCP1
						LEFT JOIN (SELECT EXCP1.EXCP_ID,MIN(EXCP1.EFF_DTTM) AS 'T_CLOSE_1'FROM #EXCP0 EXCP1
								LEFT JOIN #EXCP EXCP2
								ON EXCP1.EXCP_ID = EXCP2.EXCP_ID WHERE EXCP1.EFF_DTTM > TRUE_OPEN AND EXCP1.EXCP_STS_DESC NOT IN ('RESOLVED','CLOSED','NOT VALID','CLOSED WITH VENDOR','Resolved by ML','Canceled') GROUP BY EXCP1.EXCP_ID)  SUB1 
							ON EXCP1.EXCP_ID = SUB1.EXCP_ID GROUP BY EXCP1.EXCP_ID) D
					ON EXCP1.EXCP_ID = D.EXCP_ID WHERE EXCP1.EFF_DTTM > T_OPEN_1 AND EXCP1.EXCP_STS_DESC IN ('RESOLVED','CLOSED','NOT VALID','CLOSED WITH VENDOR','Resolved by ML','Canceled') GROUP BY EXCP1.EXCP_ID) E
				ON EXCP1.EXCP_ID = E.EXCP_ID WHERE EXCP1.EFF_DTTM > T_CLOSE_2 AND EXCP1.EXCP_STS_DESC IN ('RESOLVED','CLOSED','NOT VALID','CLOSED WITH VENDOR','Resolved by ML','Canceled') GROUP BY EXCP1.EXCP_ID) E
	ON A.EXCP_ID = E.EXCP_ID



/*
--Final Excp--
SELECT BASE.*,CURA_COUNT,HACG_COUNT,EXCP_COUNT,ABS(DATEDIFF(DAY,TRUE_OPEN,GETDATE())) AS 'EXCP_AGING',A.LOAN_STATUS,BASE2.*,D.[HUD_STS_DESC]
,CASE WHEN LOAN_STATUS = 'Liquidated/Assigned to HU' THEN 'Liquidated/Assigned to HUD'
	  WHEN LOAN_STATUS <> 'Active' THEN 'Default / Not Active'
	  WHEN LOAN_STATUS = 'Active' AND (C.LOAN_NBR IS NOT NULL OR B.LOAN_NBR IS NOT NULL) THEN 'Slow Mover' 
	  WHEN LOAN_STATUS = 'Active' AND (HUD_STS_DESC IN ('HUD Approved','HUD Approval')) THEN 'PTA Granted                               '
	  WHEN LOAN_STATUS = 'Active' AND (HUD_STS_DESC IN ('Resubmitted to HUD','Pkg Submitted to HUD','Rebuttal to HUD')) THEN 'Submitted to HUD'
	  ELSE 'Pending HACG'
END AS 'Bucket'
,CASE WHEN B.LOAN_NBR IS NOT NULL THEN 'Y'
	ELSE 'N'
	END AS 'Loss_Draft_Flag'

,CASE WHEN C.LOAN_NBR IS NOT NULL THEN 'Y'
	ELSE 'N'
	END AS 'FPI_Flag'

,CASE WHEN C.LOAN_NBR IS NOT NULL OR B.LOAN_NBR IS NOT NULL THEN 'Y'
	ELSE 'N'
	END AS 'SM_FLAG'

FROM REVERSE_DW.[dbo].[RM_CHAMPION_MASTER_TBL_CURR_VW] A
INNER JOIN #BASE1 BASE
ON A.LOAN_NBR = BASE.LOAN_NBR
INNER JOIN #BASE BASE2
ON A.LOAN_NBR = BASE2.LOAN_NBR
LEFT JOIN (SELECT LOAN_NBR FROM REVERSE_DW.[dbo].[HUD_ASGN_EXCP_EDW] WHERE [DOC_DESC] = 'Loss Draft' AND CURR_IND = 'Y' AND [EXCP_STS_DESC] NOT IN ('RESOLVED','CLOSED','NOT VALID','CLOSED WITH VENDOR')) B
	ON BASE.LOAN_NBR = B.LOAN_NBR
LEFT JOIN (SELECT LOAN_NBR FROM REVERSE_DW.[dbo].[HUD_ASGN_EXCP_EDW] WHERE [ISSU_DESC] = 'Forced Placed Insurance' AND CURR_IND = 'Y' AND [EXCP_STS_DESC] NOT IN ('RESOLVED','CLOSED','NOT VALID','CLOSED WITH VENDOR')) C
	ON BASE.LOAN_NBR = C.LOAN_NBR
LEFT JOIN (SELECT LOAN_NBR,[HUD_STS_DESC] FROM REVERSE_dw.[dbo].[HUD_ASGN_HUD_STS] WHERE CURR_IND = 'Y') D
	ON BASE.LOAN_NBR = D.LOAN_NBR
LEFT JOIN (SELECT LOAN_NBR, COUNT(LOAN_NBR) AS'EXCP_COUNT' FROM #EXCP GROUP BY LOAN_NBR) E
	ON BASE.LOAN_NBR = E.LOAN_NBR
LEFT JOIN (SELECT LOAN_NBR, COUNT(LOAN_NBR) AS'CURA_COUNT' FROM #EXCP WHERE ISNULL([WRK_GRP_DESC],'No Group') IN ('Curative','LandTran') GROUP BY LOAN_NBR) G
	ON BASE.LOAN_NBR = G.LOAN_NBR
LEFT JOIN (SELECT LOAN_NBR, COUNT(LOAN_NBR) AS'HACG_COUNT' FROM #EXCP WHERE ISNULL([WRK_GRP_DESC],'No Group') IN ('HACG') GROUP BY LOAN_NBR) H
	ON BASE.LOAN_NBR = H.LOAN_NBR
LEFT JOIN (SELECT LOAN_NBR FROM #EXCP WHERE DOC_DESC ='FNMA Denied') F
	ON BASE.LOAN_NBR = F.LOAN_NBR

	SELECT DISTINCT [WRK_GRP_DESC] FROM #EXCP

WHERE A.[FHA_CASE_NBR] <> '0000000000000' AND F.LOAN_NBR IS NULL
*/

--Final Loan--
SELECT DISTINCT BASE2.*,A.LOAN_STATUS,D.[HUD_STS_DESC],CURA_COUNT,HACG_COUNT,EXCP_COUNT
,CASE WHEN LOAN_STATUS = 'Liquidated/Assigned to HU' THEN 'Liquidated/Assigned to HUD'
	  WHEN LOAN_STATUS <> 'Active' THEN 'Default / Not Active'
	  WHEN LOAN_STATUS = 'Active' AND (C.LOAN_NBR IS NOT NULL OR B.LOAN_NBR IS NOT NULL) THEN 'Slow Mover' 
	  WHEN LOAN_STATUS = 'Active' AND (HUD_STS_DESC IN ('HUD Approved','HUD Approval')) THEN 'PTA Granted                               '
	  WHEN LOAN_STATUS = 'Active' AND (HUD_STS_DESC IN ('Resubmitted to HUD','Pkg Submitted to HUD','Rebuttal to HUD')) THEN 'Submitted to HUD'
	  ELSE 'Pending HACG'
END AS 'Bucket'
,CASE WHEN B.LOAN_NBR IS NOT NULL THEN 'Y'
	ELSE 'N'
	END AS 'Loss_Draft_Flag'

,CASE WHEN C.LOAN_NBR IS NOT NULL THEN 'Y'
	ELSE 'N'
	END AS 'FPI_Flag'

,CASE WHEN C.LOAN_NBR IS NOT NULL OR B.LOAN_NBR IS NOT NULL THEN 'Y'
	ELSE 'N'
	END AS 'SM_FLAG'

FROM REVERSE_DW.[dbo].[RM_CHAMPION_MASTER_TBL_CURR_VW] A
INNER JOIN #BASE1 BASE
ON A.LOAN_NBR = BASE.LOAN_NBR
INNER JOIN #BASE BASE2
ON A.LOAN_NBR = BASE2.LOAN_NBR
LEFT JOIN (SELECT LOAN_NBR FROM REVERSE_DW.[dbo].[HUD_ASGN_EXCP_EDW] WHERE [DOC_DESC] = 'Loss Draft' AND CURR_IND = 'Y' AND [EXCP_STS_DESC] NOT IN ('RESOLVED','CLOSED','NOT VALID','CLOSED WITH VENDOR')) B
	ON BASE.LOAN_NBR = B.LOAN_NBR
LEFT JOIN (SELECT LOAN_NBR FROM REVERSE_DW.[dbo].[HUD_ASGN_EXCP_EDW] WHERE [ISSU_DESC] = 'Forced Placed Insurance' AND CURR_IND = 'Y' AND [EXCP_STS_DESC] NOT IN ('RESOLVED','CLOSED','NOT VALID','CLOSED WITH VENDOR')) C
	ON BASE.LOAN_NBR = C.LOAN_NBR
LEFT JOIN (SELECT LOAN_NBR,[HUD_STS_DESC] FROM REVERSE_dw.[dbo].[HUD_ASGN_HUD_STS] WHERE CURR_IND = 'Y') D
	ON BASE.LOAN_NBR = D.LOAN_NBR
LEFT JOIN (SELECT LOAN_NBR, COUNT(LOAN_NBR) AS'EXCP_COUNT' FROM #EXCP GROUP BY LOAN_NBR) E
	ON BASE.LOAN_NBR = E.LOAN_NBR
LEFT JOIN (SELECT LOAN_NBR, COUNT(LOAN_NBR) AS'CURA_COUNT' FROM #EXCP WHERE ISNULL([WRK_GRP_DESC],'No Group') IN ('Curative','LandTran') GROUP BY LOAN_NBR) G
	ON BASE.LOAN_NBR = G.LOAN_NBR
LEFT JOIN (SELECT LOAN_NBR, COUNT(LOAN_NBR) AS'HACG_COUNT' FROM #EXCP WHERE ISNULL([WRK_GRP_DESC],'No Group') IN ('HACG') GROUP BY LOAN_NBR) H
	ON BASE.LOAN_NBR = H.LOAN_NBR
LEFT JOIN (SELECT LOAN_NBR FROM #EXCP WHERE DOC_DESC ='FNMA Denied') F
	ON BASE.LOAN_NBR = F.LOAN_NBR

WHERE A.[FHA_CASE_NBR] <> '0000000000000' AND F.LOAN_NBR IS NULL

